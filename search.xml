<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>//2023/03/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>news</title>
    <url>//2023/03/18/news/</url>
    <content><![CDATA[<h1 id="这里是预览"><a href="#这里是预览" class="headerlink" title="这里是预览"></a>这里是预览</h1><p><img src="/%5Cimages%5Cpasted-0.png%5C" alt="预览"></p>
]]></content>
  </entry>
  <entry>
    <title>新的提示</title>
    <url>//2023/03/16/%E6%96%B0%E7%9A%84%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<p>本帖最后由 xixicoco 于 2023-2-18 18:45 编辑</p>
<p>在app限制代理和vpn抓包下的另类抓包解决方案</p>
<p>在逆向的过程中，抓包是首要要解决的问题。但是现在的app反制措施很多，其中限制代理和vpn是抓包是很普遍的。通常这样的解决方案是找到app相关的类，进行hook或者pach，但是要找到这样的类或者方法是不容易的，并不适合新手操作。本文介绍一种较为容易的另类解决方案，可以较为全面的解决以上问题：<br>硬件环境：</p>
<p>1：处于同一路由器下的同一ip段的手机和pc；</p>
<p>2：手机需要root权限，笔者系统为android8.1，以下或者以上的系统应该也可以（未经测试）；</p>
<p>3：adb usb调试模式连接好手机；</p>
<p>首先，下载附件的clash.rar,解压后可以看到如下的目录：</p>
<p>1：用文本编辑工具打开config.yaml文件，笔者的pc ip地址为172.17.145.1，红框内填写你的pc ip地址即可，别的地方无需更改，保存。</p>
<p>2：运行push.bat,这一步会推送相关文件到手机的data&#x2F;local&#x2F;tmp 目录，运行完毕后，任意键终止即可：</p>
<p>3：运行run.bat,这一步会加载clash程序和相关的iptable规则，正常运行的图示如下：</p>
<p>4：run.bat后，这个运行窗口会不断的输出信息，在抓包的过程中都要始终保持此窗口。如结束抓包，那么右上角X结束程序，同时需运行clear.bat清除iptale规则，以免给程序运行造成网路的麻烦。</p>
<p>5：在浏览器测试：<a href="http://172.17.145.2:9090，其中172.17.145.2为手机的ip地址">http://172.17.145.2:9090，其中172.17.145.2为手机的ip地址</a></p>
<p>如反馈如下，则正常：</p>
<p>其次，打开一款web版clash控制台，这里用的是 <a href="http://clash.razord.top/%EF%BC%88%E4%BD%86%E6%98%AF%E8%BF%99%E4%B8%AA%E7%BD%91%E5%9D%80%E4%B8%8D%E5%A5%BD%E4%BD%BF%EF%BC%8C%E8%A6%81%E7%BF%BB%E5%A2%99%EF%BC%8C%E6%B1%82%E6%8E%A8%E8%8D%90%E5%A5%BD%E4%BD%BF%E7%9A%84web%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%89%EF%BC%9A">http://clash.razord.top/（但是这个网址不好使，要翻墙，求推荐好使的web控制台）：</a></p>
<p>1：打开网址 <a href="http://clash.razord.top/%E5%90%8E%EF%BC%8C%E4%BC%9A%E5%BC%B9%E5%87%BA%EF%BC%9A">http://clash.razord.top/后，会弹出：</a></p>
<p>填写你的手机 ip 地址，端口9090 ，点确定</p>
<p>2：到设置选项，设置socks5端口为8889，http端口为8888，其他不变：</p>
<p>3：回到策略组这里，选择proxy_socks5或者proxy_http：</p>
<p>[b]说明：[i]如果选择的是http那么抓包工具charles，fiddler和burp都可以用。如果选择的socks5，那么只有charles可以用（原因是只有charles直接支持socks代理）。这两者的区别在于socks5有更好的兼容性，有些app的包在socke5下才可以顺利抓取。当然如果你有好的http2socks的工具也可以尝试把fd和burp的端口转换位socks，这两款软件个人认为看起来更直观，只是我目前并没有找到这样的工具，求推荐！</p>
<p>4：在clarles的proxy settings，里设置如下：</p>
<p>在clarles的ssl proxying settings，里设置如下,其中inclue的host 和 port 都填入*，只有填写正确才能解密ssl：</p>
<p>5：安装charles，fd和burp相应的证书。这步从略，网上有很多教程。值得注意的是在android7以上，还需要把证书移动到系统目录，推荐用magisk的Move_Certificates模块，将抓包软件的证书置于系统内让系统信任；</p>
<p>6：顺利抓包的3款软件：</p>
<p>fd和burp的代理设置从略，只要设置为8888端口即可，很简单。</p>
<p>7：只要pc和手机的ip和端口没有变化，那么第二大步的web端下次均无需设置，直接运行run.bat和抓包软件即可</p>
<p>[b]最后总结：这种方案是利用clash的core版本配合iptable规则将数据转发到抓包软件，以避免app对代理和vpn的检测，比较具有普遍性。</p>
<p>[b]值得注意的是，即使这样操作后可能某些软件依然有抓包的问题。那么基本上就涉及到ssl pining或者证书绑定等。</p>
<p>[b]但这个便利的框架已经搭建起来，对应解决相关为题即可</p>
<p>最后该项目教程主要来源于：<a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1747740&extra=&highlight=%D7%A5%EF%BF%BD%EF%BF%BD&page=1">pojie</a></p>
]]></content>
  </entry>
</search>
